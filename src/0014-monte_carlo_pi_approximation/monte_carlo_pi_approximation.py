#!/usr/bin/python3
# Questioner: Google
# Difficulty: Medium

"""
The area of a circle is defined as πr^2. Estimate π to 3 decimal places using a Monte Carlo method.

Hint: The basic equation of a circle is x^2 + y^2 = r^2.
"""

from tqdm import tqdm
from random import random
import math

# -----------------------------------------------------------------------------

def sol1(decimals, z_score):
  # TODO: this is 4 times as accurate as asked
  n = n_samples(
    z_score,
    0.5, # set p=0.5 since we pretend not to know pi, otherwise p=pi/4
    5 * 10 ** (-decimals-1) / 4, # divide error by 4 since only one quadrant is simulated
  )
  hits = 0
  for _ in tqdm(range(n)):
    if (random() ** 2 + random() ** 2) < 1:
      hits += 1
  return 4 * hits / n


# -----------------------------------------------------------------------------

from scipy.stats import norm

def z_score(confidence):
  return norm.ppf((1 + confidence) / 2)

def n_samples(z_score, p, margin_of_error):
  "Number of samples to get the desired margin of error with a certain confidence." 
  return math.ceil((z_score ** 2 * p * (1 - p)) / (margin_of_error ** 2))

if __name__ == '__main__':
  functions = (
    sol1,
  )
  tests = [
    *[(3, z_score(0.68)) for _ in range(10)],
    *[(3, z_score(0.95)) for _ in range(7)],
    *[(3, z_score(0.997)) for _ in range(5)],
  ]
  for args in tests:
    print(f"{args=}")
    for f in functions:
      print(f"{f(*args):.{args[0]+8}f}", f)

"""
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:08<00:00, 1767426.66it/s]
3.14153520944 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:09<00:00, 1669946.77it/s]
3.14122149176 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:07<00:00, 2259564.25it/s]
3.14202512472 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:07<00:00, 2220072.06it/s]
3.14100939737 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:07<00:00, 2224602.51it/s]
3.14128140400 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:07<00:00, 2100331.27it/s]
3.14089462878 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:07<00:00, 1997100.25it/s]
3.14141108746 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:08<00:00, 1927962.33it/s]
3.14208200342 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:08<00:00, 1905980.35it/s]
3.14135319757 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(0.9944578832097535))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 15823144/15823144 [00:08<00:00, 1890582.12it/s]
3.14134915286 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:36<00:00, 1666037.40it/s]
3.14141199807 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:37<00:00, 1641027.83it/s]
3.14189339070 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:43<00:00, 1420979.21it/s]
3.14141232346 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:44<00:00, 1371407.81it/s]
3.14169327141 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:38<00:00, 1584283.64it/s]
3.14157014111 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:41<00:00, 1489858.51it/s]
3.14154326330 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(1.959963984540054))
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 61463342/61463342 [00:38<00:00, 1594765.01it/s]
3.14135498847 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(2.9677379253417717))
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 140919495/140919495 [01:47<00:00, 1312460.82it/s]
3.14163271732 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(2.9677379253417717))
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 140919495/140919495 [01:47<00:00, 1315060.40it/s]
3.14158755678 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(2.9677379253417717))
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 140919495/140919495 [01:37<00:00, 1450384.79it/s]
3.14142698283 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(2.9677379253417717))
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 140919495/140919495 [01:34<00:00, 1496605.74it/s]
3.14146833978 <function sol1 at 0x7f528e98eb60>
args=(3, np.float64(2.9677379253417717))
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 140919495/140919495 [01:41<00:00, 1381684.86it/s]
3.14154512121 <function sol1 at 0x7f528e98eb60>
"""
